{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehaboob Hombal\\\\Desktop\\\\store-app\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:/Users/Mehaboob Hombal/Desktop/store-app/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {storeProducts,detailProduct} from './data';\r\nconst ProductContext = React.createContext();\r\n//Provider\r\n\r\n//Consumer\r\n\r\nclass ProductProvider extends Component {\r\n\r\n    state = {\r\n        products: [],\r\n        detailProduct: detailProduct,\r\n        cart:[],\r\n        modalOpen:false,\r\n        modalProduct:detailProduct,\r\n        cartSubTotal:0,\r\n        cartTax:0,\r\n        cartTotal:0\r\n\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setProducts();\r\n    }\r\n\r\n    setProducts = ()=> {\r\n        let tempProducts = [];\r\n        storeProducts.forEach(item => {\r\n            const singleItem = {...item};\r\n            tempProducts = [...tempProducts,singleItem];  \r\n        });\r\n\r\n        this.setState(()=> {\r\n            return {products:tempProducts};\r\n        });\r\n    };\r\n\r\n    getItem = id =>{\r\n        const product = this.state.products.find(item => item.id === id);\r\n        return product;\r\n    }\r\n\r\n    handleDetail = (id) => {\r\n        const product = this.getItem(id);\r\n        this.setState(() =>{\r\n            return {detailProduct:product}\r\n        })\r\n    }\r\n\r\n    addToCart = (id) =>{\r\n        let tempProducts = [...this.state.products];\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        const product = tempProducts[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        this.setState(() => {\r\n            return {products:tempProducts,cart:[...this.state.cart,product]};\r\n        },() => {\r\n            this.addTotals();\r\n        });\r\n\r\n    };\r\n\r\n    openModal = id => {\r\n        const product = this.getItem(id);\r\n        this.setState(() => {\r\n            return {modalProduct:product,modalOpen:true}\r\n        });\r\n    }\r\n\r\n    closeModal = () =>{\r\n        this.setState(()=> {\r\n            return {modalOpen:false};\r\n        });\r\n    }\r\n\r\n   increment = (id) => {\r\n       let tempCart = [...this.state.cart];\r\n       const selectedProduct = tempCart.find(item =>item.id === id);\r\n\r\n       const index = tempCart.indexOf(selectedProduct);\r\n       const product = tempCart[index];\r\n       product.count = product.count +1;\r\n       product.total = product.count * product.price;\r\n\r\n       this.setState(()=> {\r\n           return{\r\n               cart:[...tempCart]\r\n           }\r\n       },()=> {\r\n           this.addTotals();\r\n       });\r\n   };\r\n\r\n   decrement = (id) => {\r\n    let tempCart = [...this.state.cart];\r\n    const selectedProduct = tempCart.find(item =>item.id === id);\r\n\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n\r\n    product.count = product.count - 1;\r\n\r\n    if(product.count === 0){\r\n        this.removeItem(id)\r\n    }\r\n    else{\r\n        product.total = product.count * product.price;\r\n        this.setState(()=> {\r\n            return{\r\n                cart:[...tempCart]\r\n            }\r\n        },()=> {\r\n            this.addTotals();\r\n        });\r\n    }\r\n    }\r\n\r\n    removeItem = (id) => {\r\n        let tempProducts = [...this.state.products];\r\n        let tempCart = [...this.state.cart];\r\n\r\n        tempCart = tempCart.filter(item => item.id !== id);\r\n\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct = tempProducts[index];\r\n        removedProduct.inCart = false;\r\n\r\n        removedProduct.count = 0;\r\n        removedProduct.total = 0;\r\n\r\n        this.setState(() => {\r\n            return {\r\n                cart:[...tempCart],\r\n                products:[...tempProducts]\r\n            }\r\n        },()=> {\r\n            this.addTotals();\r\n        });\r\n    }\r\n\r\n    clearCart = () => {\r\n        this.setState(()=> {\r\n            return{\r\n                cart:[]\r\n            };\r\n        },()=>{\r\n            this.setProducts();\r\n            this.addTotals();\r\n        });\r\n    }\r\n\r\n    addTotals = () => {\r\n        let subTotal = 0;\r\n        this.state.cart.map(item => (subTotal += item.total));\r\n        const tempTax = subTotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = subTotal + tax;\r\n        this.setState(() => {\r\n            return {\r\n                cartSubTotal: subTotal,\r\n                cartTax:tax,\r\n                cartTotal:total\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider \r\n            value={{\r\n                ...this.state,\r\n                handleDetail:this.handleDetail,\r\n                addToCart:this.addToCart,\r\n                openModal:this.openModal,\r\n                closeModal:this.closeModal,\r\n                increment:this.increment,\r\n                decrement: this.decrement,\r\n                removeItem:this.removeItem,\r\n                clearCart:this.clearCart\r\n            }}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider,ProductConsumer};"]},"metadata":{},"sourceType":"module"}